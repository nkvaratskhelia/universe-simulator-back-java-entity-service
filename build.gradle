plugins {
    id 'java'
    id 'jacoco'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'org.springframework.boot' version '2.4.2'
}

group = 'com.example.universe.simulator'
version = '0.0.1-SNAPSHOT'

sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

test {
    useJUnitPlatform()
}

jacocoTestCoverageVerification {
    dependsOn test
    afterEvaluate {
        jacocoExclusions(classDirectories)
    }

    violationRules {
        rule {
            limit {
                minimum = 1
            }
        }
    }
}

private jacocoExclusions(classDirectories) {
    classDirectories.setFrom(files(classDirectories.files.collect {
        fileTree(dir: it, exclude: [
                'com/example/universe/simulator/entityservice/EntityServiceApplication.class',
                'com/example/universe/simulator/entityservice/entities/**_.class'
        ])
    }))
}

jacocoTestReport {
    dependsOn test
    afterEvaluate {
        jacocoExclusions(classDirectories)
    }
}

bootBuildImage {
    imageName = "universesimulator/${project.name}"
    publish = true
    docker {
        publishRegistry {
            username = System.getenv('US_DOCKER_REGISTRY_USER')
            password = System.getenv('US_DOCKER_REGISTRY_PASSWORD')
        }
    }
}

ext {
    set('springdocOpenapiVersion', '1.5.3')
}

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
}

dependencyManagement {
    imports {
        mavenBom 'org.springframework.cloud:spring-cloud-dependencies:2020.0.0-RC1'
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.modelmapper:modelmapper:2.3.9'
    implementation "org.springdoc:springdoc-openapi-data-rest:${springdocOpenapiVersion}"
    runtimeOnly 'org.springframework.cloud:spring-cloud-starter-bootstrap'
    runtimeOnly 'org.springframework.cloud:spring-cloud-starter-vault-config'
    runtimeOnly 'org.liquibase:liquibase-core'
    runtimeOnly 'org.postgresql:postgresql'
    runtimeOnly "org.springdoc:springdoc-openapi-ui:${springdocOpenapiVersion}"
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.hibernate:hibernate-jpamodelgen'
    annotationProcessor 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'com.h2database:h2'
}
